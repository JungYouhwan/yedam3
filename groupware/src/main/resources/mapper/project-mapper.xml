<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samjo.app.project.mapper.ProjectMapper">

	<!-- 프로젝트(상위), 프로젝트(하위), 업무공통(효주) // 협력업체, 상시업무는 task-mapper에 -->
	
	<!-- 프로젝트(상위) 전체 조회 -->
	<select id="selectPrjtAllList" resultType="ProjectVO">
		SELECT p.prjt_id 
			  ,p.prjt_name 
		      ,t.task_name
		      ,t.task_no
		      ,e.dept_name
		      ,p.prjt_start_dt
		      ,p.prjt_due_dt
		      ,p.purpose
		      ,p.smry
		      ,p.prjt_stat 
		FROM prjt p JOIN task_common t 
		             ON (p.prjt_id = t.standard_no)
		             JOIN task_emps e
		             ON (t.task_no = e.task_no)
	</select>
	
	<!-- 프로젝트(상위) 단건 -->
	<select id="selectPrjt" resultType="ProjectVO">
			SELECT             p.prjt_id
							  ,p.prjt_name
						      ,t.task_name
						      ,t.task_no
						      ,get_deptname(e.dept_id) as dept_name
			                  ,e.emp_name
						      ,p.prjt_start_dt
						      ,p.prjt_due_dt
						      ,p.purpose
						      ,p.smry
			FROM prjt p join task_common t 
			                    on p.prjt_id = t.standard_no
						 join emp e
			                    on t.cust_no = e.cust_no
			WHERE t.task_no = #{taskNo}
			ORDER BY p.prjt_id	
	</select>
	
	<!-- 프로젝트(상위) 등록 -->
	<insert id="insertPrjt" parameterType="ProjectVO"> 
			<selectKey keyProperty="prjtId" order="BEFORE"
			resultType="string">
			SELECT 'CPJ'||LPAD(NVL((MAX(TO_NUMBER(SUBSTR(prjt_id, -4)))),0 + 1), 4, '0') 
			FROM prjt
		</selectKey>
		INSERT ALL INTO prjt (prjt_id 
							,prjt_name 
							,prjt_stat 
							,prjt_start_dt 
							,prjt_due_dt 
							,smry 
							,purpose 
							,resp_mngr_id
							,cust_no)
					VALUES (#{prjtId}
							,#{prjtName}
							,#{prjtStat}
							,#{prjtStartDt}
							,#{prjtDueDt}
							,#{smry}
							,#{purpose}
							,#{respMngrId}
							,#{custNo})
		INTO task_emps (task_no
					, task_emp_id
					, dept_id
					, dept_name
					, cmplt
					, cust_no)
		VALUES(#{taskNo}
				,#{taskEmpId}
				,#{deptId}
				,#{deptName}
				,#{cmplt}
				,#{custNo})
		SELECT 1 FROM DUAL
	</insert>
	<!-- 프로젝트(상위) 수정 prjt테이블만 수정.  -->
	<update id="updatePrjt" parameterType="ProjectVO">
		SET        		prjt_name = #{prjtName}
		                ,prjt_stat = #{prjtStat}
					    ,prjt_start_dt = #{prjtStartDt}
					    ,prjt_due_dt  = #{prjtDueDt}
					    ,purpose = #{purpose},
					    ,smry = #{smry}
		                ,resp_mngr_id = #{respMngrId}
		                ,cust = #{cust}
		WHERE prjt_id = #{prjtId}
	</update>	
		
	<!-- 프로젝트(상위) 삭제-->
	<delete id="deletePrjt" parameterType="int">
		DELETE FROM prjt
		WHERE prjt_id = #{prjtId}
	</delete>
	
	<!-- 프로젝트(하위) 업무 전체 조회 -->
	<select id="selectTaskAllList" resultType="ProjectVO">
	SELECT        t.task_no
			      ,t.task_name
			      ,t.task_start_dt
			      ,t.task_due_dt
	              ,e.task_emp_id
	FROM task_common t JOIN task_emps e
			       ON (t.task_no = e.task_no)
	ORDER BY t.task_no
	</select>
	
	<!-- 프로젝트(하위) 단건 -->
	<select id="selectTask" resultType="ProjectVO">
		SELECT p.prjt_id    
	        ,p.prjt_name
	        ,p.prjt_stat
	        ,e.dept_name
	        ,t.task_start_dt
	        ,t.task_due_dt
	        ,t.task_no
	        ,m.emp_name
	        ,p.purpose
        	,p.smry
		FROM  task_common t JOIN task_emps e
			              ON t.task_no = e.task_no
	               	 JOIN prjt p 
	                     ON p.prjt_id = t.standard_no
	               	 JOIN emp m
	                    ON m.emp_id = p.resp_mngr_id
	  WHERE t.task_no = #{taskNo}          
     </select>
	<!-- 프로젝트(하위) 업무 등록 -->
	<insert id="insertTask" parameterType="ProjectVO"> 
			<selectKey 
			keyProperty="taskNo" 
			resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(task_no),0) +1 
			FROM task_common
		</selectKey>
		INSERT ALL INTO  task_common(
						    task_no,
						    task_name,
						    task_purpose,
						    task_cntn,
						    task_start_dt,
						    task_due_dt,
						    task_type,
						    standard_no,
						    prjt_mat,
						    dept_id,
						    cust_no  )
				VALUES (
							    #{taskNo},
							    #{taskName},
							    #{taskPurpose},
							    #{taskCntn},
							    #{taskStartDt},
							    #{taskDueDt},
							    #{taskType},
							    #{standardNo},
							    #{prjtMat},
							    #{deptId},
							    #{custNo} )
				INTO task_emps (
						    task_no,
						    task_emp_id,
						    dept_id,
						    dept_name,
						    cmplt,
						    cust_no )
				    VALUES (
						     #{taskNo},
						     #{taskEmpId},
						     #{deptId},
						     #{deptName},
						     #{cmplt},
						     #{custNo})
				 select 1 from dual
 		</insert>
	<!-- 프로젝트(하위) 업무 수정 -->
	
	
	
	<!-- 프로젝트(하위) 업무 삭제-->
	<delete id="deleteTask" parameterType="int">
		DELETE FROM task_common
		WHERE task_no = #{taskNo}
	</delete>	
	
	
	<!-- 효주 - 업무공통 조회 : 마감날짜 이전 업무번호,부서ID,부서명,업무명. -->
	<select id="selectTasks" resultType="ProjectVO">
		SELECT tc.task_no
		       ,tc.dept_id
		       ,d.dept_name
		       ,tc.task_name
		FROM task_common tc JOIN dept d
		                     ON(tc.dept_id = d.dept_id)
		WHERE tc.cust_no = #{cno}
		AND task_due_dt > SYSDATE	
	</select>
	<!-- 효주 끝. -->
	
</mapper>
