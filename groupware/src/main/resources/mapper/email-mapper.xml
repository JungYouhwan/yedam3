<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.samjo.app.email.mapper.EmailMapper">
  
  <!-- 발신자,수신자,참조자 id를 매개로 이름 가져오는 함수 정의했다. 호출문! -->
   <select id="getEmpName" parameterType="emailVO" resultType="emailVO">
    { call get_email_name(
        #{sender, mode=IN, jdbcType=VARCHAR},
        #{recp, mode=IN, jdbcType=VARCHAR},
        #{refer, mode=IN, jdbcType=VARCHAR}
    ) }
  </select>
  
  <!-- 받은메일함 전체조회 -->
 	<select id="selectInboxAll" parameterType="searchVO" resultType="EmailVO">
  		SELECT g.*
		FROM (SELECT rownum rn,
			         t.*
			  FROM (SELECT r.rec_email_no,
			               r.recp,
			               r.refer,
			               r.cust_no,
			               r.recp_type,
			               r.email_stat AS rstat,
			               s.email_stat AS sstat,
			               s.sen_email_no, 
			               s.title,
						   s.sender,
						   s.sent_dt
				    FROM email s JOIN inbox r
							     ON (s.sen_email_no = r.sen_email_no)
				    WHERE  r.email_stat = '3B1b' 
				    AND  r.cust_no = #{custNo, jdbcType=VARCHAR}
				    AND  (r.recp = #{recp} OR r.refer = #{recp})
				    <if test="keyword != null and keyword != ''">
						AND ${searchCondition} LIKE '%' || #{keyword} || '%'
					</if>
					<if test ="recpType != null and recpType !='' ">
						AND r.recp_Type LIKE #{recpType}
					</if>
					<if test="sdStart != null">
						AND s.sent_Dt >= #{sdStart}
					</if>
					<if test="sdEnd != null">						
						AND s.sent_Dt <![CDATA[<=]]> #{sdEnd}
					</if>
				    ORDER BY ${emSort} ) t
				WHERE rownum <![CDATA[<=]]> (#{page} * 10)) g
		WHERE g.rn > (#{page} -1) * 10
  	</select>
  	
  	 <select id="count" parameterType="SearchVO" resultType="int">
  		SELECT count(*)
  		FROM INBOX
  	</select>
  
  <!-- 받은메일 페이징 -->
  	<select id="countMyInbox" parameterType="SearchVO">
        SELECT COUNT(*)
        FROM inbox r JOIN email s
                     ON (s.sen_email_no = r.sen_email_no)
		WHERE  r.email_stat = '3B1b'  
		AND  r.cust_no = #{custNo, jdbcType=VARCHAR}
		AND  (r.recp = #{recp} OR r.refer = #{recp})
		<if test="keyword != null and keyword != ''">
			AND ${searchCondition} LIKE '%' || #{keyword} || '%'
		</if>
		<if test ="recpType != null and recpType !='' ">
			AND r.recp_Type LIKE #{recpType}
		</if>
		<if test="sdStart != null">
			AND s.sent_Dt >= #{sdStart}
		</if>
		<if test="ctEnd != null">						
			AND s.sent_Dt <![CDATA[<=]]> #{sdEnd}
		</if>
	</select>

	<!-- inbox 상세조회 -->
<select id="selectInbox" resultType="EmailVO">
    SELECT s.sen_email_no AS senEmailNo,
           r.rec_email_no AS recEmailNo,
           s.sender AS sender,
           r.recp AS recp,
           r.refer AS refer,
           s.title AS title,
           s.cntn AS cntn,
           r.email_stat,
           r.cust_no AS custNo,
           id_to_the_name(sender) AS senderName,
           id_to_the_name(recp) AS recpName,
           id_to_the_name(refer) AS referName
    FROM   email s JOIN inbox r 
                   ON s.sen_email_no = r.sen_email_no
                   JOIN emp e
                   ON e.emp_id = r.sen_email_no
    WHERE s.sen_email_no = #{senEmailNo, jdbcType=VARCHAR}
</select>
  
  
  <!-- email,inbox 단건조회시 첨부파일 조회 -->
  	<select id="selectEmailFile" resultType="EmailFileVO">
		SELECT file_no
		       ,sen_email_no
		       ,save_name
		       ,upl_name
		       ,file_size
		       ,file_ext
		FROM email_file
		WHERE sen_email_no = #{senEmailNo}
		ORDER BY file_no	
	</select>
  	
  <!-- 발송 시 3중셀렉키 조합 인서트 프로시저에 넘기는 파라미터를 배열로 넘기고 for문을 돌린다, 혹은 서비스임플에서 호출을 여러번 할 수도 있겠다.-->
  <insert id="insertEmail" parameterType="emailVO" statementType="CALLABLE">
    <![CDATA[
    CALL insert_email(
        #{sender, mode=IN, jdbcType=VARCHAR},
        #{title, mode=IN, jdbcType=VARCHAR},
        #{cntn, mode=IN, jdbcType=VARCHAR},
        #{recp, mode=IN, jdbcType=VARCHAR},
        #{refer, mode=IN, jdbcType=VARCHAR},
        #{custNo, mode=IN, jdbcType=VARCHAR},
        #{senEmailNo, mode=OUT, jdbcType=VARCHAR},
        #{recpType, mode=IN, jdbcType=VARCHAR}
    )
    ]]>
</insert>
  	
<!-- 첨부파일 등록. -->
	<insert id="insertEmailFile" parameterType="EmailFileVO">
		<selectKey keyProperty="fileNo"
				   resultType="Integer"
				   order="BEFORE">
			SELECT NVL(MAX(file_no), 0) + 1
			FROM email_file
		</selectKey>
		INSERT INTO email_file
		        (
		            file_no
		            ,sen_email_no
		            ,save_name
		            ,upl_name
		            ,file_ext
		            ,file_dt
		            ,file_size
		            ,upl_emp      
		        )
		  VALUES
		        (
		         #{fileNo}
		        ,#{senEmailNo}
		        ,#{saveName}
		        ,#{uplName}
		        ,#{fileExt}
		        ,SYSDATE
		        ,#{fileSize}
		        ,#{uplEmp}
		        )	
	</insert>  	
  	
  <!-- 보낸메일함 전체조회 -->	
 	<select id="selectEmailAll" parameterType="searchVO" resultType="EmailVO">
  		SELECT g.*
		FROM (SELECT rownum rn,
			         t.*
			  FROM (SELECT s.sen_email_no,
			               r.recp,
			               r.refer,
			               r.cust_no,
			               r.recp_type,
			               r.email_stat AS rstat,
			               s.email_stat AS sstat,
			               s.title,
						   s.sender,
						   s.sent_dt
				    FROM email s JOIN inbox r
							     ON (s.sen_email_no = r.sen_email_no)
				    WHERE s.email_stat = '3B1b'
				    AND  r.cust_no = #{custNo, jdbcType=VARCHAR}
				    AND  s.sender = #{sender}
				    <if test="keyword != null and keyword != ''">
						AND ${searchCondition} LIKE '%' || #{keyword} || '%'
					</if>
					<if test="sdStart != null">
						AND s.sent_Dt >= #{sdStart}
					</if>
					<if test="sdEnd != null">						
						AND s.sent_Dt <![CDATA[<=]]> #{sdEnd}
					</if>
				    ORDER BY ${emSort} ) t
				WHERE rownum <![CDATA[<=]]> (#{page} * 10)) g
		WHERE g.rn > (#{page} -1) * 10
  	</select>
  	
    <!--  보낸메일 페이징 카운트 -->
  	 <select id="countSend">
  		SELECT count(*)
  		FROM EMAIL
  	</select>
  	
  	  <!-- 보낸메일 페이징 -->
  	<select id="countMyEmail" parameterType="SearchVO">
        SELECT COUNT(*)
        FROM inbox r JOIN email s
                     ON (s.sen_email_no = r.sen_email_no)
		WHERE	sender = #{sender}
		AND     s.cust_no = #{custNo}
		AND     s.email_stat = '3B1b'	
		<if test="keyword != null and keyword != ''">
			AND ${searchCondition} LIKE '%' || #{keyword} || '%'
		</if>
		<if test="sdStart != null">
			AND s.sent_Dt >= #{sdStart}
		</if>
		<if test="ctEnd != null">						
			AND s.sent_Dt <![CDATA[<=]]> #{sdEnd}
		</if>
	</select>
  	
  	<!-- 보낸메일 상세조회 -->
  	<select id="selectEmail" resultType="EmailVO">
    SELECT s.sen_email_no AS senEmailNo,
           s.sender AS sender,
           r.recp AS recp,
           r.refer AS refer,
           s.title AS title,
           s.cntn AS cntn,
           s.email_stat,
           r.cust_no AS custNo
    FROM   email s JOIN inbox r 
                   ON s.sen_email_no = r.sen_email_no
    WHERE s.sen_email_no = #{senEmailNo, jdbcType=VARCHAR}
</select>
  	


  	<update id="deleteEmail" parameterType="list">
	  	UPDATE email
		SET email_stat = '3B2b'
	  	<where>
	  		<foreach collection="list" item="senEmailNo" 
	  				 open="sen_email_no in (" close=")" separator=",">	  	
				#{senEmailNo}
	  		</foreach>
	  	</where>
  	</update>
  	
  	<update id="deleteInbox" parameterType="list">
	  	UPDATE inbox
		SET email_stat = '3B2b'
		<where>
			<foreach collection="list" item="recEmailNo"
				     open="rec_email_no in (" close=")" separator=",">
				#{recEmailNo}	
			</foreach>		
		</where>
  	</update> 

	<!-- 휴지통 전체조회 -->
	<select id="wastedList" parameterType="searchVO" resultType="EmailVO">
  	SELECT g.*
		FROM (SELECT rownum rn,
			         t.*
			  FROM (SELECT s.sen_email_no,
			  	   		   r.rec_email_no,
			               r.recp,
			               r.refer,
			               r.cust_no,
			               r.recp_type,
			               r.email_stat AS rstat, 
			               s.email_stat AS sstat, 
			               s.title,
						   s.sender,
						   s.sent_dt
				    FROM   email s JOIN inbox r
							     ON (s.sen_email_no = r.sen_email_no)
                    WHERE  r.cust_no = #{custNo, jdbcType=VARCHAR} 
                    AND    (r.email_stat = '3B2b' OR s.email_stat = '3B2b')
                    AND  (s.sender = #{sender, jdbcType=VARCHAR}
                    OR    r.recp = #{recp, jdbcType=VARCHAR} 
                    OR    r.refer = #{refer, jdbcType=VARCHAR})
                   <if test="keyword != null and keyword != ''">
                      AND ${searchCondition} LIKE '%' || #{keyword} || '%'
                   </if>
                   <if test="sdStart != null">
                      AND s.sent_Dt >= #{sdStart}
                   </if>
                   <if test="sdEnd != null">						
                      AND s.sent_Dt <![CDATA[<=]]> #{sdEnd}
                   </if>
                         ORDER BY ${emSort} ) t
				WHERE rownum <![CDATA[<=]]> (#{page} * 10)) g
		WHERE g.rn > (#{page} -1) * 10
	</select>
	
	  	  <!-- 휴지통 페이징 -->
  	<select id="countWasted" parameterType="SearchVO">
        SELECT COUNT(*)
        FROM inbox r JOIN email s
                     ON (s.sen_email_no = r.sen_email_no)
                    WHERE  r.cust_no = #{custNo, jdbcType=VARCHAR} 
                    AND    (r.email_stat = '3B2b' OR s.email_stat = '3B2b')
                    AND  (s.sender = #{sender, jdbcType=VARCHAR}
                    OR    r.recp = #{recp, jdbcType=VARCHAR} 
                    OR    r.refer = #{refer, jdbcType=VARCHAR})	
		<if test="keyword != null and keyword != ''">
			AND ${searchCondition} LIKE '%' || #{keyword} || '%'
		</if>
		<if test="sdStart != null">
			AND s.sent_Dt >= #{sdStart}
		</if>
		<if test="ctEnd != null">						
			AND s.sent_Dt <![CDATA[<=]]> #{sdEnd}
		</if>
	</select>
	
	<!-- 휴지통 이메일 복원 -->
    <select id="restoreMail" parameterType="java.util.Map">
        CALL restore_mail(#{senEmailNo})
    </select>
  	
  	
	<!-- 휴지통 이메일 완전삭제 -->
    <select id="removeMail" parameterType="java.util.Map">
        CALL remove_mail(#{senEmailNo})
    </select>
  	
  	<!-- 주소록 조회. 세션의 id와 같은 고객사에 속하는 사원들의 일부 정보를 가린 채 Select -->
  	<select id="getEmpList" resultType="EmpVO" parameterType="EmpVO">
  	SELECT e.emp_name,
       d.dept_name,
       j.job_title,
       e.emp_id
	FROM emp e JOIN dept d
           ON e.dept_id = d.dept_id
           JOIN jobs j
           ON e.job_no = j.job_no
	WHERE e.cust_no = #{custNo}
  	</select>
  	
  </mapper>