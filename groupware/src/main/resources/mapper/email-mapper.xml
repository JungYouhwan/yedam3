<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.samjo.app.email.mapper.EmailMapper">
  
  <!-- 받은메일함 전체조회 -->
 	<select id="selectInboxAll" parameterType="searchVO" resultType="EmailVO">
  		SELECT g.*
		FROM (SELECT rownum rn,
			         t.*
			  FROM (SELECT r.rec_email_no,
			               r.recp,
			               r.refer,
			               r.cust_no,
			               r.recp_type,
			               r.email_stat,
			               s.sen_email_no, 
			               s.title,
						   s.sender,
						   s.sent_dt
				    FROM email s JOIN inbox r
							     ON (s.sen_email_no = r.sen_email_no)
				    WHERE  (r.recp = #{recp} OR r.refer = #{refer, jdbcType=VARCHAR})
				    AND  r.cust_no = #{custNo, jdbcType=VARCHAR}
				    AND  r.email_stat = '3B1b' <!-- if걸고 수신자,참조자 구별하기 -->
				    <if test="keyword != null and keyword != ''">
				    	AND ${searchCondition} Like '%' || #{keyword} || '%'
				    </if>
				    <if test ="recpType != null and recpType !='' ">
				    	AND r.recp_type LIKE #{recpType}
				    </if>
				    <choose>
					    <when test="sdStart != null and sdEnd != null">
						    AND ${sentDt} BETWEEN #{sdStart} AND #{sdEnd}
					    </when>
					    <when test="(sdStart != null) and (sdEnd == null)">
						    AND ${sentDt} >= #{sdStart}
					    </when>
					    <when test="(sdEnd != null) and (sdStart == null)">						
						    AND ${sentDt} <![CDATA[<=]]> #{sdEnd}
					    </when>
				    </choose>
				    ORDER BY sent_Dt ASC ) t
				WHERE rownum <![CDATA[<=]]> (#{page} * 10)) g
		WHERE g.rn > (#{page} -1) * 10
  	</select>
  	
  	 <select id="count" parameterType="SearchVO" resultType="int">
  		SELECT count(*)
  		FROM INBOX
  	</select>
  
  <!-- 받은메일 페이징 -->
  	<select id="countMyInbox" parameterType="SearchVO">
        SELECT COUNT(*)
        FROM inbox r JOIN email s
                     ON (s.sen_email_no = r.sen_email_no)
		WHERE	recp = #{recp}	
		OR      refer = #{refer, jdbcType=VARCHAR}
		<if test="keyword != null and keyword != ''">
			AND ${searchCondition} LIKE '%' || #{keyword} || '%'
		</if>
		<if test ="recpType != null and recpType !='' ">
			AND recp_type = #{recpType}
		</if>
			<choose>
				<when test="sdStart != null and sdEnd != null">
					AND ${sentDt} BETWEEN #{sdStart} AND #{sdEnd}
				</when>
				<when test="(sdStart != null) and (sdEnd == null)">
					AND ${sentDt} >= #{sdStart}
				</when>
				<when test="(sdEnd != null) and (sdStart == null)">						
					AND ${sentDt} <![CDATA[<=]]> #{sdEnd}
				</when>
			</choose>
	</select>
  
  <!-- email,inbox 단건조회시 첨부파일 조회 -->
  	<select id="selectEmailFile" resultType="EmailFileVO">
		SELECT file_no
		       ,sen_email_no
		       ,save_name
		       ,upl_name
		       ,file_size
		       ,file_ext
		FROM email_file
		WHERE sen_email_no = #{senEmailNo}
		ORDER BY file_no	
	</select>
  	
  <!-- 발송 시 3중셀렉키 조합 인서트 -->
  <insert id="insertEmail" parameterType="emailVO" statementType="CALLABLE">
    <![CDATA[
    CALL insert_email(
        #{sender, mode=IN, jdbcType=VARCHAR},
        #{title, mode=IN, jdbcType=VARCHAR},
        #{cntn, mode=IN, jdbcType=VARCHAR},
        #{recp, mode=IN, jdbcType=VARCHAR},
        #{refer, mode=IN, jdbcType=VARCHAR},
        #{custNo, mode=IN, jdbcType=VARCHAR},
        #{senEmailNo, mode=OUT, jdbcType=VARCHAR},
        #{recpType, mode=IN, jdbcType=VARCHAR}
    )
    ]]>
</insert>
  	
<!-- 첨부파일 등록. -->
	<insert id="insertEmailFile" parameterType="EmailFileVO">
		<selectKey keyProperty="fileNo"
				   resultType="Integer"
				   order="BEFORE">
			SELECT NVL(MAX(file_no), 0) + 1
			FROM email_file
		</selectKey>
		INSERT INTO email_file
		        (
		            file_no
		            ,sen_email_no
		            ,save_name
		            ,upl_name
		            ,file_ext
		            ,file_dt
		            ,file_size
		            ,upl_emp      
		        )
		  VALUES
		        (
		         #{fileNo}
		        ,#{senEmailNo}
		        ,#{saveName}
		        ,#{uplName}
		        ,#{fileExt}
		        ,SYSDATE
		        ,#{fileSize}
		        ,#{uplEmp}
		        )	
	</insert>  	
  	
  <!-- 보낸메일함 전체조회 / 페이징처리 아직 안함 -->	
  	<select id="selectEmailAll" parameterType="SearchVO" resultType="EmailVO">
  		SELECT SEN_EMAIL_NO
              ,SENDER
              ,TITLE
              ,CNTN
              ,SENT_DT
              ,EMAIL_STAT
              ,CHAIN_MAIL_NO
              ,CUST_NO
        FROM   (SELECT /*+ INDEX(INBOX email_sen_email_no_pk) */
        		       ROWNUM RN,
        		       EMAIL.*
        		FROM   EMAIL
        		WHERE  ROWNUM <![CDATA[<=]]> (#{page} * 5)
        		AND    SENDER = #{empId})
         ) a
        WHERE a.rn > (#{page} - 1) * 5
  	</select>
  	
    <!--  보낸메일 페이징 카운트 -->
  	 <select id="countSend">
  		SELECT count(*)
  		FROM EMAIL
  	</select>
  	
  	<!-- 휴지통 보내기 -->
  	<update id="goWaste">
	  	UPDATE email
		SET email_stat = '3B2b'
		WHERE sen_email_no = #{senEmailNo}<!-- 선택한 메일의 번호..파라미터로 넘어오는. -->
  	</update>
  	
  	 <select id="countWasted">
  		SELECT count(*)
  		FROM   EMAIL
  		WHERE  email_stat = '3B2b'
  	</select>

	<!-- 휴지통 전체조회, 서치VO 활용해야하고, 아마 수정할 부분이 있을 것.0523 -->
	<select id="wastedList" parameterType="EmpVO" resultType="EmailVO">
  	SELECT s.sender
      	  ,s.title
          ,s.sent_dt
    FROM  email s JOIN inbox i
          ON s.sen_email_no = i.sen_email_no
    WHERE s.email_stat = '3B2b'
          AND i.email_stat = '3B2b'
          AND s.cust_no = #{custNo}
          AND i.cust_no = #{custNo}
          <!-- 고객사별 분류를 해서 가져와야하므로. 로그인 세션에서 받아온 고객사번과 대조 -->
	</select>
	
	<!-- 휴지통 이메일 복원 -->
	<update id="restoreMail" parameterType="EmailVO">
	  	UPDATE email
		SET email_stat = '3B1b'
		WHERE sen_email_no = #{senEmailNo}
  	</update>
  	
  	<!-- 주소록 조회. 세션의 id와 같은 고객사에 속하는 사원들의 일부 정보를 가린 채 Select -->
  	<select id="getEmpList" resultType="EmpVO" parameterType="EmpVO">
  	SELECT e.emp_name,
       d.dept_name,
       j.job_title,
       e.emp_id
	FROM emp e JOIN dept d
           ON e.dept_id = d.dept_id
           JOIN jobs j
           ON e.job_no = j.job_no
	WHERE e.cust_no = #{custNo}
  	</select>
  	
  </mapper>