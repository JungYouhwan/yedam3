<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samjo.app.approval.mapper.DocMapper">

	<!-- 한 문서에 소속된 업무들 가져오는 Map 정의 -->
	<resultMap type="DocVO" id="docMap">
		<id property="docNo" column="doc_no" />
		<result property="draft" column="draft" />
		<result property="custNo" column="cust_no" />
		<result property="deptId" column="dept_id" />
		<result property="title" column="title" />
		<result property="cntn" column="cntn" />
		<result property="draftDt" column="draft_dt" />		
		<result property="draftStat" column="draft_stat" />		
		<result property="tempId" column="temp_id" />
		<result property="finalLine" column="final_line" />
		<result property="nowLine" column="now_line" />
		<result property="docStat" column="doc_stat" />
		<result property="cmpltDt" column="cmplt_dt" />
		<result property="draftName" column="draft_name" />
		<result property="deptName" column="dept_name" />
		<result property="draftStatName" column="draft_stat_name" />
		<result property="docStatName" column="doc_stat_name" />
		<result property="tempName" column="temp_name" />
		<result property="taskCount" column="task_count" />
		<result property="curApr" column="cur_apr" />
		<collection property="taskList" column="doc_no" javaType="java.util.List" ofType="ProjectVO" select="docMapTaskList">
			<id property="taskNo" column="task_no"/>
			<result property="taskName" column="task_name"/>
			<result property="deptName" column="dept_name"/>
		</collection>
	</resultMap>

	<!-- 전체목록 : 나중에 cust id 및 열람가능 문서로 제한해야함. -->
	<select id="selectDocAll" parameterType="searchVO" resultType="DocVO">
		SELECT rn
		       ,doc_no
		       ,draft
		       ,dept_id
		       ,title
		       ,cntn
		       ,draft_dt
		       ,draft_stat
		       ,temp_id
		       ,final_line
		       ,now_line
		       ,doc_stat
		       ,cmplt_dt
		FROM (SELECT /*+ INDEX(DOC DOC_DOC_NO_PK) */
		            rownum rn,
		            doc.*
		      FROM  doc
		      WHERE rownum <![CDATA[<=]]> (#{page} * 5)) a
		WHERE  a.rn > (#{page} - 1) * 5	
	</select>
	
	<!-- 페이징 위한 count. -->
	<select id="count">
		SELECT count(*)
		FROM doc
	</select>
	
	<!-- 한 직원이 작성한 모든문서 -->
	<select id="selectEmpDocs" parameterType="map" resultMap="docMap">
		SELECT 
		         g.rn
		        ,g.doc_no
		        ,g.temp_name
		        ,g.task_count
		        ,g.title
		        ,g.draft_stat_name
		        ,g.doc_stat_name
		        ,g.cur_apr
		        ,g.draft_dt
		FROM
		        (SELECT 
		                ROW_NUMBER() OVER (ORDER BY d.doc_no DESC) rn
		                ,d.doc_no
		                ,get_tempname(d.temp_id) 	AS temp_name
		                ,COUNT(td.task_no)		 	AS task_count
		                ,d.title
		                ,get_codename(d.draft_stat) AS draft_stat_name
				        ,get_codename(d.doc_stat)	AS doc_stat_name
		                ,NVL2(a.apr_yn, a.apr_name|| ' ' ||get_codename(a.apr_yn), '-') AS cur_apr
		                ,d.draft_dt 
		        FROM	
		        		doc d LEFT OUTER JOIN task_doc td 
		                                   ON (d.doc_no = td.doc_no)
		                                 JOIN apr a 
		                                   ON (d.doc_no = a.doc_no AND a.apr_sq = d.now_line)
		        WHERE	d.draft = #{eid}	
		        GROUP BY 
		                d.doc_no
		                ,d.temp_id
		                ,d.title
		                ,d.draft_stat
		                ,d.doc_stat
		                ,a.apr_yn
		                ,a.apr_name
		                ,d.draft_dt     ) g
		WHERE	g.rn <![CDATA[<=]]> (#{sch.page} * 5)
		AND		g.rn > (#{sch.page} - 1) * 5
	</select>
	
	<!-- 위의 문서리스트(작성문서)의 카운트. -->
	<select id="countEmpDocs" resultType="int">
		SELECT  COUNT(*)
		FROM
		        (SELECT d.doc_no
		                ,COUNT(td.task_no)
		         FROM	doc d LEFT OUTER JOIN task_doc td 
		                                   ON (d.doc_no = td.doc_no)
		                                 JOIN apr a 
		                                   ON (d.doc_no = a.doc_no AND a.apr_sq = d.now_line)
		         WHERE	d.draft = #{eid}	
		       	 GROUP BY d.doc_no)
	</select>

	<!-- 내가 현재 결재해야할 문서리스트. -->
	<select id="selectEmpApr" parameterType="map" resultMap="docMap">
		SELECT 
				 g.rn
				,g.doc_no
				,g.draft
				,g.dept_id
				,g.temp_name
				,g.dept_name
				,g.task_count
				,g.title
				,g.draft_name
				,g.cur_apr
				,g.draft_dt
		FROM
				(SELECT 
						ROW_NUMBER() OVER (ORDER BY d.doc_no DESC) rn
						,d.doc_no
						,d.draft
						,d.dept_id
						,get_tempname(d.temp_id) AS temp_name
						,get_deptname(d.dept_id) AS dept_name
						,COUNT(td.task_no)		 AS task_count
						,d.title
						,d.draft_name
						,get_codename(a.apr_yn)  AS cur_apr
						,d.draft_dt 
				FROM	
						doc d LEFT OUTER JOIN task_doc td 
				        				   ON (d.doc_no = td.doc_no)
				                         JOIN apr a 
				                           ON (d.doc_no = a.doc_no AND a.apr_sq = d.now_line)
				WHERE	a.apr_emp = #{eid}	
				AND		d.doc_stat = '4B2b'
				GROUP BY 
						 d.doc_no
						,d.draft
						,d.dept_id
						,d.temp_id
						,d.dept_id
						,d.title
						,d.draft_name
						,a.apr_yn
						,d.draft_dt 	) g
		WHERE	g.rn <![CDATA[<=]]> (#{sch.page} * 5)
		AND		g.rn > (#{sch.page} - 1) * 5
	</select>

	<!-- 위의 문서리스트(결재해야할 문서)의 카운트. -->
	<select id="countEmpApr" resultType="int">
		SELECT  COUNT(*)
		FROM
				(SELECT d.doc_no
						,COUNT(td.task_no)
				FROM	doc d LEFT OUTER JOIN task_doc td 
				        				   ON (d.doc_no = td.doc_no)
				                         JOIN apr a 
				                           ON (d.doc_no = a.doc_no AND d.now_line = a.apr_sq)
				WHERE	d.doc_stat = '4B2b'
				AND		a.apr_emp = #{eid}
				GROUP BY d.doc_no) 
	</select>
	
	<!-- 전체문서 중 결재진행 중 문서. -->
	<select id="selectIngDocs" parameterType="map" resultMap="docMap">
		SELECT	
				 g.rn
				,g.doc_no
				,g.dept_name
				,g.temp_name
				,g.task_count
				,g.title
				,g.draft_name
				,g.cur_apr
				,g.draft_dt
		FROM
				(SELECT
						ROW_NUMBER() OVER (ORDER BY d.doc_no DESC) rn
						,d.doc_no
						,get_deptname(d.dept_id)	AS dept_name
						,get_tempname(d.temp_id)	AS temp_name
						,COUNT(td.task_no)			AS task_count
						,d.title
						,d.draft_name
						,NVL2(a.apr_yn, a.apr_name|| ' ' ||get_codename(a.apr_yn), '-') AS cur_apr
						,d.draft_dt
				FROM	
						doc d LEFT OUTER JOIN task_doc td 
				                           ON (d.doc_no = td.doc_no)
				              LEFT OUTER JOIN apr a 
				                           ON (d.doc_no = a.doc_no AND a.apr_sq = d.now_line)
				WHERE	d.cust_no = #{emp.custNo}
				AND		d.doc_stat = '4B2b'
				GROUP BY 
						d.doc_no
						,d.dept_id
						,d.temp_id
						,d.title
						,d.draft_name
						,a.apr_yn
						,a.apr_name
						,d.draft_dt		) g
		WHERE	g.rn <![CDATA[<=]]> (#{sch.page} * 5)
		AND		g.rn > (#{sch.page} - 1) * 5
	</select>

	<!-- 위의 문서리스트(결재진행 중 문서)의 카운트. -->
	<select id="countIng" parameterType="EmpVO" resultType="int">
		SELECT  COUNT(*)
		FROM
				(SELECT	d.doc_no
				        ,MIN(td.task_no)
				 FROM	doc d LEFT OUTER JOIN task_doc td 
				                       	   ON (d.doc_no = td.doc_no)
				              LEFT OUTER JOIN apr a 
				                           ON (d.doc_no = a.doc_no AND a.apr_sq = d.now_line)
				 WHERE	d.cust_no = #{custNo}
				 AND	d.doc_stat = '4B2b'
				 GROUP BY d.doc_no)
	</select>	
	
	<!-- 전체문서 중 완료된 문서 -->
	<select id="selectCmpltDocs" parameterType="map" resultMap="docMap">
		SELECT 
			   	 g.rn
			  	,g.doc_no
			  	,g.dept_name
			  	,g.temp_name
			  	,g.task_count
			  	,g.title
			  	,g.draft_name
			  	,g.doc_stat_name
			    ,g.draft_dt
		FROM    
				(SELECT 
						 ROW_NUMBER() OVER (ORDER BY d.doc_no DESC) rn
				        ,d.doc_no
				        ,get_deptname(d.dept_id)  AS dept_name
				        ,get_tempname(d.temp_id)  AS temp_name
				        ,COUNT(td.task_no)		  AS task_count
				        ,d.title
				        ,d.draft_name
				        ,get_codename(d.doc_stat) AS doc_stat_name
				        ,d.draft_dt
				FROM 
						doc d LEFT OUTER JOIN task_doc td 
				                           ON (d.doc_no = td.doc_no)
				WHERE 
						d.cust_no = #{emp.custNo} 
				AND 
						(d.doc_stat = '4B3b' OR d.doc_stat = '4B4b')
						
						<choose>
							<when test="sch.schTaskNo != null">
							AND td.task_no IN 
								<foreach item="no" index="index" collection="sch.schTaskNo"
      									 open="(" separator="," close=")">
								#{no}
								</foreach>
							</when>
						</choose>
						
				GROUP BY 
						 d.doc_no
					    ,d.dept_id
					    ,d.temp_id
					    ,d.title
					    ,d.draft_name
					    ,d.doc_stat
					    ,d.draft_dt		) g
		WHERE 	g.rn <![CDATA[<=]]> (#{sch.page} * 5)
		AND 	g.rn > (#{sch.page} - 1) * 5
	</select>
	
	<!-- 위의 문서리스트(완료 문서)의 카운트. -->
	<select id="countCmplt" parameterType="map" resultType="int">
		SELECT  COUNT(*)
		FROM
				(SELECT	d.doc_no
				        ,COUNT(td.task_no)
				 FROM	doc d LEFT OUTER JOIN task_doc td 
				                           ON (d.doc_no = td.doc_no)
				              LEFT OUTER JOIN apr a 
				                           ON (d.doc_no = a.doc_no AND a.apr_sq = d.now_line)
				 WHERE	d.cust_no = #{emp.custNo}
				 AND	(d.doc_stat = '4B3b' OR d.doc_stat = '4B4b')
				 		
				 		<choose>
							<when test="sch.schTaskNo != null">
							AND td.task_no IN 
								<foreach item="no" index="index" collection="sch.schTaskNo"
      									 open="(" separator="," close=")">
								#{no}
								</foreach>
							</when>
						</choose>
						
				 GROUP BY d.doc_no)
	</select>		
		
	<!-- resultmap의 collection의 select : taskList -->
	<select id="docMapTaskList" resultType="ProjectVO">
		SELECT
		         td.task_no
		        ,get_taskname(td.task_no) AS task_name
		        ,get_deptname(t.dept_id)  AS dept_name
		FROM 
		        task_doc td JOIN task_common t
		                      ON (td.task_no = t.task_no)
		WHERE	td.doc_no = #{doc_no}
	</select>
	
		
	<!-- 한 문서 상세정보. -->
	<select id="selectDoc" resultType="DocVO">
		SELECT d.doc_no
				,d.draft
		        ,e.emp_name as draft_name
		        ,d.dept_id
		        ,dt.dept_name
		        ,d.title
		        ,d.cntn
		        ,d.draft_dt
		        ,d.draft_stat
		        ,get_codename(d.draft_stat) AS draft_stat_name       
		        ,d.temp_id
		        ,get_tempname(d.temp_id) 	AS temp_name
		        ,d.final_line
		        ,d.now_line
		        ,d.doc_stat
		        ,get_codename(d.doc_stat) 	AS doc_stat_name
				,d.cmplt_dt
		FROM doc d JOIN emp e 
		             ON(d.draft = e.emp_id)
		           JOIN dept dt 
		             ON(d.dept_id = dt.dept_id)
		WHERE doc_no = #{docNo}
	</select>
	
	<!-- 한 문서의 업무 가져오기 -->
	<select id="selectDocTasks" resultType="ProjectVO">
		SELECT td.task_no
		       ,tc.task_name
		       ,d.dept_name
		       ,tc.dept_id
		FROM task_doc td JOIN task_common tc
		                  ON(td.task_no = tc.task_no)
		                 JOIN dept d
		                  ON(tc.dept_id = d.dept_id)
		WHERE td.doc_no = #{dno}
		ORDER BY dept_id, td.task_no DESC	
	</select>
	
	<!-- 한 문서의 첨부파일 가져오기 -->
	<select id="selectDocFile" resultType="DocFileVO">
		SELECT file_no
		       ,doc_no
		       ,save_name
		       ,upl_name
		       ,file_size
		       ,file_ext
		FROM doc_file
		WHERE doc_no = #{dno}
		ORDER BY file_no	
	</select>
	
	<!-- 문서등록. -->
	<insert id="insertDoc" parameterType="DocVO">
		<selectKey keyProperty="docNo" order="BEFORE" resultType="int">
			SELECT NVL(MAX(doc_no), 0) + 1 as docNo
			FROM doc
		</selectKey>
		INSERT INTO doc
				(
					doc_no
	                ,draft
	                ,draft_name
	                ,cust_no
	                ,dept_id
	                ,title
	                <if test="cntn != null and !cntn.equals('')">
	                ,cntn
	                </if>
	                ,temp_id
	                ,final_line
				)
	  	  VALUES
	  	  		(
	  	  			#{docNo}
			        ,#{draft}
			        ,#{draftName}
			        ,#{custNo}
			        ,#{deptId}
			        ,#{title}
			        <if test="cntn != null and !cntn.equals('')">
			        ,#{cntn}
			        </if>
			        ,#{tempId}
			        ,#{finalLine}
			     )
	</insert>
	
	<!-- 문서등록 위한 PK. -->
	<select id="getDocNo" resultType="docVO">
		SELECT NVL(MAX(doc_no), 0) + 1 as docNo
		FROM doc	
	</select>
	
	<!-- 문서의 첨부파일 등록. -->
	<insert id="insertDocFile" parameterType="DocFileVO">
		<selectKey keyProperty="fno" resultType="int" order="BEFORE">
			SELECT NVL(TO_NUMBER(MAX(file_no)), 0) + 1
			FROM doc_file
		</selectKey>
		INSERT ALL		
			<foreach collection="files" item="file" index="no">
			INTO doc_file
			        (
			            file_no
			            ,doc_no
			            ,save_name
			            ,upl_name
			            ,file_ext
			            ,file_size
			            ,upl_emp      
			        )
			  VALUES
			        (
			         #{fno} + #{no}
			        ,#{file.docNo}
			        ,#{file.saveName}
			        ,#{file.uplName}
			        ,#{file.fileExt}
			        ,#{file.fileSize}
			        ,#{file.uplEmp}
			        )	
			</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<!-- 문서와 업무 연결. -->
	<insert id="insertTaskDoc" parameterType="DocVO">
	INSERT ALL
		<foreach collection="doc.tasks" item="tno">
		INTO task_doc
			(
				 doc_no
				,task_no
				,cust_no
			)
		  VALUES
			(
				 #{doc.docNo}
				,#{tno}
				,#{doc.custNo}
			)		
		</foreach>
	SELECT * FROM DUAL
	</insert>
	
	<!-- 문서수정 -->
	<update id="updateDoc" parameterType="DocVO">
		UPDATE doc
		SET title = #{title}
		    <if test="cntn != null and !cntn.equals('')">
		    ,cntn = #{cntn}
		    </if>
		    ,final_line = #{finalLine}
		    ,draft_dt = sysdate
		    ,temp_id = #{tempId}
		WHERE doc_no = #{docNo}
	</update>
	
	<delete id="deleteTaskDoc" parameterType="int">
		DELETE task_doc
		WHERE doc_no = #{dno}
	</delete>
	
	<!-- 파일삭제 -->
	<delete id="deleteDocFile" parameterType="int">
		DELETE doc_file
		WHERE doc_no = #{dno}
	</delete>
	
</mapper>
  