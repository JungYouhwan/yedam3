<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.samjo.app.work.mapper.WorkMapper">
  <select id="selectAllList" resultType="WorkVO" parameterType="WorkSearchVO">
SELECT t.*
FROM (SELECT rownum rn, 
                     f.*
      FROM (SELECT w.*
            FROM (SELECT e.*
                  FROM (SELECT
                               i.dt,
                               j.emp_no,
                               j.emp_name,
                               i.wk_in,
                               i.wk_out,
                               (select sub_code_name
                               from sub_code
                               where sub_code_id = wk_yn) wk_yn,
                               (select sub_code_name
                               from sub_code
                               where sub_code_id = wk_stat) wk_stat,
                               (select sub_code_name
                               from sub_code
                               where sub_code_id = wk_site) wk_site
                               FROM emp j join wk i
                                            on j.emp_id = i.emp_id
                         ORDER BY dt) e
                    WHERE    wk_yn   = #{wkYn} and
                             wk_stat = #{wkStat} and
                             wk_site = #{wkSite} and
                                   dt <![CDATA[<=]]>  #{oneDate} ) w
            WHERE rownum <![CDATA[<=]]> (#{page} * 5)) f ) t
WHERE t.rn > (#{page} -1) * 5
  </select>
	<!-- 페이징 위한 count. -->
 	<select id="workcount">
		SELECT count(*)
		FROM wk
	</select>
	
	<select id="managerWorkList" resultType="WorkManagerVO">
	SELECT l.*
    FROM (SELECT t.*
          FROM(SELECT e.*, rownum rn
               FROM (SELECT
                      (SELECT dept_name
                       FROM dept
                       WHERE dept_id = emp.dept_id) dept_id ,
                       emp_no,
                       emp_name,
                      (SELECT job_title
                       FROM jobs
                       WHERE job_no = emp.job_no) job_no ,
                       hire_dt,
                       emp_tel
                 FROM emp
                 ORDER BY #{filter}) e
            WHERE ROWNUM <![CDATA[<=]]> (#{page} * 5)) t) l
WHERE l.rn <![CDATA[<=]]> (#{page}* 5)
	</select>
	<select id="managercount">
		SELECT count(*)
		FROM emp
	</select>
	<!-- 출근을 입력하기위해... 중복이되면 안됨. -->
	<update id="workin">
	UPDATE wk
	SET wk_in = sysdate
	where emp_id = #{empId}
	</update>
	<!-- 출근을 했는지 안했는지 체크하기위해 -->
	<select id="in_check">
	SELECT wk_in
	FROM wk
	where emp_id = #{empId}
	</select>
	
	<!-- 퇴근을 입력하기위해... 중복이됨.-->
	 <update id="workout">
	UPDATE wk
	SET wk_out = sysdate
	where emp_id = #{empId}
	</update>
  
    <insert id="workinsert">
insert into wk(
               emp_id,
               dt,
               wk_in,
               wk_yn,
               wk_stat,
               wk_site)
values (
               'AAA1001',
               sysdate,
			   sysdate
               '2A1a',
               '2B1b',
               '2C1c')
   </insert>
   <!-- 상세페이지 확인 -->
  <select id="selectWork" resultType="WorkVO">
select 
       emp_id,
       dt,
       wk_in,
       wk_out,
       wk_in_loc,
       wk_out_loc,
       wk_yn,
       wk_stat,
       wk_site
from wk
where dt = #{dt} and emp_id = #{empId}

   </select>
   <!-- 상세페이지에서 작동하는 업데이트 -->
   <update id="updateWork" parameterType="WorkVO">
   UPDATE wk 
   SET
          wk_in = #{wkIn}
          wk_out = #{wkOut},
          wk_in_loc = #{wkInLoc},
          wk_out_loc = #{wkOutLoc},
          wk_yn = #{wkYn},
          wk_stat = #{wkStat},
          wt_site = #{wkSite}
   WHERE dt = #{dt} AND emp_no = #{empNo}
   </update>
   
  </mapper>
  